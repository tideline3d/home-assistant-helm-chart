apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "adguard-home.fullname" . }}
  labels:
    {{- include "adguard-home.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      {{- include "adguard-home.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "adguard-home.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "adguard-home.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.config }}
      initContainers:
        - name: copy-default-config
          image: alpine:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - |
              if [[ ! -f /opt/adguardhome/conf/AdGuardHome.yaml ]]; then
                mkdir -p /opt/adguardhome/conf
                cp /tmp/AdGuardHome.yaml /opt/adguardhome/conf/AdGuardHome.yaml
              fi
          volumeMounts:
            - name: default-config
              mountPath: /tmp/AdGuardHome.yaml
              subPath: AdGuardHome.yaml
            {{- if .Values.persistence.config.enabled }}
            - name: config
              mountPath: /opt/adguardhome/conf
            {{- end }}
          securityContext:
            runAsUser: 0
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.env }}
          env:
            {{- range $key, $value := . }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
            - name: dns-tcp
              containerPort: 53
              protocol: TCP
            - name: dns-udp
              containerPort: 53
              protocol: UDP
            - name: dns-over-tls
              containerPort: 853
              protocol: TCP
            - name: dns-over-quic
              containerPort: 784
              protocol: UDP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- if .Values.persistence.config.enabled }}
            - name: config
              mountPath: /opt/adguardhome/conf
            {{- end }}
            {{- if .Values.persistence.data.enabled }}
            - name: data
              mountPath: /opt/adguardhome/work
            {{- end }}
            {{- if .Values.config }}
            - name: default-config
              mountPath: /tmp/AdGuardHome.yaml
              subPath: AdGuardHome.yaml
            {{- end }}
      volumes:
        {{- if .Values.config }}
        - name: default-config
          configMap:
            name: {{ include "adguard-home.configMapName" . }}
        {{- end }}
        {{- if .Values.persistence.config.enabled }}
        - name: config
          persistentVolumeClaim:
            claimName: {{ include "adguard-home.fullname" . }}-config
        {{- end }}
        {{- if .Values.persistence.data.enabled }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "adguard-home.fullname" . }}-data
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.podAntiAffinity.enabled }}
      affinity:
        podAntiAffinity:
          {{- if .Values.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution }}
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - {{ include "adguard-home.name" . }}
                topologyKey: kubernetes.io/hostname
          {{- else }}
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - {{ include "adguard-home.name" . }}
              topologyKey: kubernetes.io/hostname
          {{- end }}
      {{- end }}
